{
	"info": {
		"_postman_id": "587c3638-f57c-4878-bf7b-35063c7603e1",
		"name": "EU4Spartan",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "GET SPARTAN 11",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Content-Type is present\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"});",
							"",
							"pm.test(\"Date is present\", function () {",
							"    pm.response.to.have.header(\"Date\");",
							"});",
							"",
							"pm.test(\"Content-Type header is application/json\", () => {",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
							"});",
							"",
							"pm.test(\"Verify name is Nona\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.name).to.eql('Nona');",
							"});",
							"",
							"pm.test(\"Verify gender is Female\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.gender).to.eql('Female');",
							"});",
							"",
							"",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "34.228.41.120:8000/api/spartans/:id",
					"host": [
						"34",
						"228",
						"41",
						"120"
					],
					"port": "8000",
					"path": [
						"api",
						"spartans",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "11"
						}
					]
				},
				"description": "some test with one spartan"
			},
			"response": []
		},
		{
			"name": "GET ALL SPARTAN",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Content-Type is present\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"});",
							"",
							"pm.test(\"Date is present\", function () {",
							"    pm.response.to.have.header(\"Date\");",
							"});",
							"",
							"pm.test(\"Content-Type header is application/json\", () => {",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
							"});",
							"",
							"",
							"",
							"",
							"",
							""
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "34.228.41.120:8000/api/spartans",
					"host": [
						"34",
						"228",
						"41",
						"120"
					],
					"port": "8000",
					"path": [
						"api",
						"spartans"
					]
				},
				"description": "some test with one spartan"
			},
			"response": []
		},
		{
			"name": "GET ALL SPARTAN",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"var schema = {",
							"    \"items\": {",
							"        \"type\": \"boolean\"",
							"    }",
							"};",
							"",
							"var data1 = [true, false];",
							"var data2 = [true, 123];",
							"",
							"pm.test('Schema is valid', function () {",
							"    pm.expect(tv4.validate(data1, schema)).to.be.true;",
							"    pm.expect(tv4.validate(data2, schema)).to.be.true;",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"auth": {
					"type": "hawk",
					"hawk": [
						{
							"key": "algorithm",
							"value": "sha256",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					},
					{
						"key": "Accept",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"gender\": \"Female\",\r\n    \"name\": \"Valentino Rossi\",\r\n    \"phone\": 2565464565\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "34.228.41.120:8000/api/spartans/556",
					"host": [
						"34",
						"228",
						"41",
						"120"
					],
					"port": "8000",
					"path": [
						"api",
						"spartans",
						"556"
					],
					"query": [
						{
							"key": "Accept",
							"value": "application/json",
							"disabled": true
						},
						{
							"key": "Content-Type",
							"value": "application/json",
							"disabled": true
						}
					]
				},
				"description": "insert new json body"
			},
			"response": []
		},
		{
			"name": "{{spurl}}/api/spartans",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var name=pm.environment.get(\"name\");\r",
							"console.log(name);\r",
							"pm.environment.set(\"name\",\"Mirro\");\r",
							"console.log(name);\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{spurl}}/api/spartans",
					"host": [
						"{{spurl}}"
					],
					"path": [
						"api",
						"spartans"
					]
				},
				"description": "test funcionallity"
			},
			"response": []
		}
	]
}